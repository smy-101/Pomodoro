{"version":3,"sources":["config/history.ts","config/axios.ts","views/Login.tsx","views/SignUp.tsx","components/Drop.tsx","redux/actionTypes.ts","redux/actions/todos-actions.ts","components/TODO/TodoInput.tsx","components/TODO/TodoItem.tsx","components/TODO/Todos.tsx","components/Tomatoes/CountDown.tsx","components/Tomatoes/TomatoAction.tsx","redux/actions/tomatoes-actions.ts","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","components/Statistics/TodoHistory/TodoHistoryTodoItem.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/TomatoHistory/TomatoHistoryItem.tsx","components/Statistics/TomatoHistory/TomatoHistory.tsx","components/Statistics/Charts/TodoCharts.tsx","components/Statistics/Charts/Charts.tsx","icons/statistics.svg","icons/todo.svg","icons/Tomato.svg","components/Statistics/Statistics.tsx","icons/tomatoes.svg","views/HomePage.tsx","App.tsx","reportWebVitals.ts","redux/reducers/index.ts","redux/reducers/todos.ts","redux/reducers/tomatoes.ts","redux/store.ts","index.tsx"],"names":["publicUrl","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","log","push","Wrapper","styled","div","Login","props","onChange","key","value","newState","setState","submit","a","state","account","password","post","Error","this","placeholder","allowClear","prefix","UserOutlined","e","target","Password","type","onClick","Link","to","React","Component","SignUp","onChangeAccount","onChangePassword","onChangePasswordConformation","passwordConformation","password_confirmation","menu","message","info","Item","icon","PoweroffOutlined","Drop","name","overlay","DownOutlined","style","marginLeft","ADD_TODO","INIT_TODOS","UPDATE_TODO","EDIT_TODO","ADD_TOMATO","INIT_TOMATOES","UPDATE_TOMATO","EDIT_TOMATO","initTodos","payload","updateTodo","TodoInput","onKeyUp","keyCode","description","postTodo","addTodo","data","resource","suffix","EnterOutlined","className","mapDispatchToProps","connect","ownProps","TodoItem","params","completed","completed_at","Date","put","id","editTodo","editText","Editing","DeleteOutlined","deleted","Text","onDoubleClick","todoItemClass","classNames","editing","checked","Todos","UncompleteList","unCompletedTodos","length","map","t","todos","filter","unDeletedTodos","timerId","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","width","min","Math","floor","second","confirm","Modal","TomatoAction","updateTomato","ended_at","abortTomato","aborted","unfinishedTomato","forceUpdate","showConfirm","onOk","onCancel","cancelText","okText","html","undefined","startTomato","startedAt","parse","started_at","timeNow","getTime","CloseCircleOutlined","TomatoItem","dayjs","format","TomatoList","list","dates","d","tomatoes","finishedTomato","Object","keys","sort","b","splice","Space","Tomatoes","addTomato","finishedTomatoes","_","groupBy","tomato","TodoHistoryTodoItem","todo","action","formatText","itemType","updated_at","created_at","TabPane","Tabs","TodoHistory","finishedTodoList","finishedDates","date","dailyFinishedTodos","finishedTodos","deletedTodoList","deletedTodos","defaultActiveKey","tab","InputWrapper","input","TomatoHistoryItem","editTomato","onTomato","time1","time2","tomatoItemClass","TomatoHistory","finishedTomatoList","dailyFinishedTomato","TodoCharts","option","container","useRef","chart","useEffect","current","height","echarts","setOption","ref","days","dailyTodos","today","useState","setDate","onDateChange","day","daysInMonth","ydata","i","x","ydata1","option1","show","text","left","xAxis","tooltip","yAxis","series","option2","LiWrapper","li","DivWrapper","Statistics","activeId","index","toggleActivePane","bind","src","statisticssvg","alt","tomatosvg","todosvg","Img","img","HomePage","getMe","get","user","getTodos","resources","assign","getTomatoes","initTomatoes","logo","App","Router","Route","exact","path","component","Charts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","store","createStore","rootReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a528417a.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\nconst ENV = process.env.NODE_ENV;\nlet publicUrl:string = '';\n\nif(ENV === 'development'){\n    publicUrl = '/';\n}else if(ENV === 'production'){\n    publicUrl = '/Pomodoro';\n}\n\n\nconst history = createBrowserHistory({\n    basename: publicUrl\n});\n\nexport default history","import axios from 'axios';\nimport history from './history'\n\n\nconst appID = 'kdfrtgAEVJ1NhR9c8D9eb8Y3';\nconst appSecret = '9A5GPDaTYomgui3FHc6ne2Mw';\n\nconst instance = axios.create({\n    baseURL: 'https://gp-server.hunger-valley.com/',\n    headers: {\n        't-app-id': appID,\n        't-app-secret': appSecret\n    }\n});\n\n// Add a request interceptor\ninstance.interceptors.request.use(function (config) {\n    const xToken = localStorage.getItem('x-token');\n    if (xToken) {\n        config.headers['Authorization'] = `Bearer ${xToken}`;\n    }\n    return config;\n}, function (error) {\n    console.error(error);\n    return Promise.reject(error);\n});\n\n// Add a response interceptor\ninstance.interceptors.response.use(function (response) {\n    // Do something with response data\n    if (response.headers['x-token']) {\n        localStorage.setItem('x-token', response.headers['x-token']);\n    }\n    return response;\n}, function (error) {\n    if (error.response.status === 401) {\n        // window.location.href='/login'\n        console.log(\"重定向\");\n        history.push('/login')\n    }\n    // Do something with response error\n    return Promise.reject(error);\n});\n\nexport default instance;","import React from 'react';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport {Input, Button} from 'antd';\r\nimport axios from '../config/axios';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: auto;\r\n  padding: 50px 0;\r\n  >*{\r\n    margin: 10px 0;\r\n  }\r\n  >h1{\r\n    text-align: center;\r\n  }\r\n  >button{\r\n    width: 100%;\r\n  }\r\n`\r\n\r\n\r\ninterface Props {\r\n    account: string,\r\n    password: string,\r\n}\r\n\r\nclass Login extends React.Component<any, Props> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            account: '',\r\n            password: '',\r\n        };\r\n    }\r\n\r\n    onChange =(key:keyof Props,value:string)=>{\r\n        const newState:any={};\r\n        newState[key]=value\r\n        this.setState(newState)\r\n    }\r\n\r\n    submit = async () => {\r\n        const { account,password } = this.state;\r\n        try{\r\n            await axios.post('sign_in/user',{\r\n                account, // account: account\r\n                password\r\n            })\r\n            console.log('success');\r\n            this.props.history.push('/')\r\n        }catch(e){\r\n            throw new Error(e)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public render() {\r\n        const {account, password} = this.state;\r\n        return (\r\n            <Wrapper>\r\n                <h1>番茄TODO用户登录</h1>\r\n                <Input placeholder=\"请输入用户名\" allowClear\r\n                       prefix={<UserOutlined/>}\r\n                       value={account}\r\n                       onChange={(e) => this.onChange('account',e.target.value)}/>\r\n                <Input.Password\r\n                    value={password}\r\n                    onChange={(e) => this.onChange('password',e.target.value)}\r\n                    placeholder=\"请输入密码\"/>\r\n\r\n                <Button type=\"primary\" onClick={this.submit}>登录</Button>\r\n                <p>如果您未注册帐号，请在此<Link to=\"/signup\">注册</Link></p>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport {Login};","import React from 'react';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport {Input, Button} from 'antd';\r\nimport axios from '../config/axios';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: auto;\r\n  padding: 50px 0;\r\n  >*{\r\n    margin: 10px 0;\r\n  }\r\n  >h1{\r\n    text-align: center;\r\n  }\r\n  >button{\r\n    width: 100%;\r\n  }\r\n`\r\n\r\n\r\ninterface Props {\r\n    account: string,\r\n    password: string,\r\n    passwordConformation: string\r\n}\r\n\r\nclass SignUp extends React.Component<any, Props> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            account: '',\r\n            password: '',\r\n            passwordConformation: ''\r\n        };\r\n    }\r\n\r\n\r\n    onChangeAccount = (e: { target: { value: string; }; }) => {\r\n        console.log(e.target.value);\r\n        this.setState({ account: e.target.value });\r\n    }\r\n\r\n    onChangePassword = (e: { target: { value: string; }; }) => {\r\n        this.setState({ password: e.target.value });\r\n    }\r\n\r\n    onChangePasswordConformation = (e: { target: { value: string; }; }) => {\r\n        this.setState({ passwordConformation: e.target.value });\r\n    }\r\n    submit = async () => {\r\n        const { account,password,passwordConformation } = this.state;\r\n        try{\r\n            await axios.post('sign_up/user',{\r\n                account, // account: account\r\n                password,\r\n                password_confirmation:passwordConformation\r\n            })\r\n            console.log('success');\r\n            this.props.history.push('/')\r\n        }catch(e){\r\n            throw new Error(e)\r\n        }\r\n    }\r\n\r\n\r\n    public render() {\r\n        const {account, password, passwordConformation} = this.state;\r\n        return (\r\n            <Wrapper>\r\n                <h1>番茄TODO用户注册</h1>\r\n                <Input placeholder=\"请输入用户名\" allowClear\r\n                       prefix={<UserOutlined/>}\r\n                       value={account}\r\n                       onChange={this.onChangeAccount}/>\r\n                <Input.Password\r\n                    value={password}\r\n                    onChange={this.onChangePassword}\r\n                    placeholder=\"请输入密码\"/>\r\n                <Input.Password\r\n                    value={passwordConformation}\r\n                    onChange={this.onChangePasswordConformation}\r\n                    placeholder=\"请确认密码\"/>\r\n                <Button type=\"primary\" onClick={this.submit}>注册</Button>\r\n                <p>如果您已有帐号，请在此<Link to=\"/login\">登录</Link></p>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport {SignUp};","import React from 'react';\r\nimport {Menu, Dropdown, message} from 'antd';\r\nimport {DownOutlined, PoweroffOutlined} from '@ant-design/icons';\r\nimport history from '../config/history'\r\n\r\nfunction handleMenuClick(e: any) {\r\n    message.info('Click on menu item.');\r\n    console.log('click', e);\r\n}\r\n\r\nconst logout = () => {\r\n    localStorage.setItem('x-token', '');\r\n    history.push('/login')\r\n};\r\nconst menu = (\r\n    <Menu onClick={handleMenuClick}>\r\n\r\n        <Menu.Item key=\"2\" onClick={logout} icon={<PoweroffOutlined/>}>\r\n            注销\r\n        </Menu.Item>\r\n    </Menu>\r\n);\r\n\r\ninterface Props {\r\n    name: string;\r\n}\r\n\r\nclass Drop extends React.Component<Props, any> {\r\n\r\n\r\n    public render() {\r\n        const {name} = this.props;\r\n        return (\r\n            <div>\r\n                <Dropdown overlay={menu}>\r\n                    <span>\r\n                        {name}\r\n                        <DownOutlined style={{marginLeft: 8}}/>\r\n                    </span>\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Drop;","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const ADD_TOMATO = 'ADD_TOMATO';\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES';\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO';\r\nexport const EDIT_TOMATO = 'EDIT_TOMATO';","import {ADD_TODO,INIT_TODOS,UPDATE_TODO,EDIT_TODO} from '../actionTypes';\r\n\r\nexport const addTodo = (payload: any) => {\r\n    return {\r\n        type: ADD_TODO,\r\n        payload\r\n    };\r\n};\r\n\r\nexport const initTodos = (payload:any[])=>{\r\n    return {\r\n        type:INIT_TODOS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const updateTodo =(payload:any)=>{\r\n    return{\r\n        type:UPDATE_TODO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const editTodo =(payload:number)=>{\r\n    return{\r\n        type:EDIT_TODO,\r\n        payload\r\n    }\r\n}","import React from 'react';\nimport {Input} from 'antd';\nimport {EnterOutlined} from '@ant-design/icons';\nimport {addTodo,initTodos} from '../../redux/actions/todos-actions';\nimport {connect} from 'react-redux';\nimport axios from '../../config/axios';\n\ninterface ITodoInputState {\n    description: string;\n}\n\ninterface ITodoInputProps {\n    addTodo: (payload: any) => any[];\n}\n\n\nclass TodoInput extends React.Component<ITodoInputProps, ITodoInputState> {\n    constructor(props: ITodoInputProps) {\n        super(props);\n        this.state = {\n            description: ''\n        };\n    }\n\n    onKeyUp = (e: { keyCode: number; }) => {\n        if (e.keyCode === 13 && this.state.description !== '') {\n            this.postTodo();\n        }\n    };\n    postTodo = async ()=>{\n        try {\n            const response = await axios.post('todos',{description: this.state.description})\n            this.props.addTodo(response.data.resource)\n        }catch (e) {\n            throw new Error(e)\n        }\n        this.setState({description: ''})\n    }\n\n\n\n    public render() {\n        const {description} = this.state;\n        const suffix = description ? <EnterOutlined onClick={this.postTodo}/> : <span/>;\n\n        return (\n            <div className=\"TodoInput\">\n                <Input\n                    placeholder=\"添加新任务\"\n                    suffix={suffix}\n                    value={description}\n                    onKeyUp={this.onKeyUp}\n                    onChange={(e) => {this.setState({description: e.target.value});}}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n    return {\n        ...ownProps\n    };\n};\n\n\nconst mapDispatchToProps = {addTodo,initTodos};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\n\n","import React from 'react';\r\nimport {Checkbox} from 'antd';\r\nimport {DeleteOutlined, EnterOutlined} from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport classNames from 'classnames';\r\nimport {connect} from 'react-redux';\r\nimport {editTodo, updateTodo} from '../../redux/actions/todos-actions';\r\nimport axios from '../../config/axios';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  padding: 8px 0 8px 8px;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ddd;\r\n\r\n  &:hover {\r\n    background: #f9f9f9\r\n  }\r\n\r\n  &:first-child {\r\n    border-top: 1px solid #ddd;\r\n  }\r\n\r\n  &.editing {\r\n    background: #fff3d2\r\n  }\r\n\r\n  &.completed {\r\n    > .text {\r\n      text-decoration: line-through;\r\n      color: #a9a9a9;\r\n    }\r\n  }\r\n\r\n  > .editing, > .text {\r\n    padding: 0 8px;\r\n    flex: 1;\r\n  }\r\n\r\n  > .editing {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    > input {\r\n      border: 0;\r\n      outline: none;\r\n      background: transparent;\r\n    }\r\n\r\n    > .iconWrapper > .anticon {\r\n      margin-left: 4px;\r\n      color: #a9a9a9;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ITodoItemProps {\r\n    id: number\r\n    description: string;\r\n    completed: boolean;\r\n    editing: boolean;\r\n    editTodo: (id: number) => any;\r\n    updateTodo: (payload: any) => any;\r\n}\r\n\r\ninterface ITodoItemState {\r\n    editText: string;\r\n}\r\n\r\nclass TodoItem extends React.Component<ITodoItemProps, ITodoItemState> {\r\n    constructor(props: ITodoItemProps) {\r\n        super(props);\r\n        this.state = {\r\n            editText: this.props.description\r\n        };\r\n    }\r\n\r\n    updateTodo = async (params: any) => {\r\n        if(params.completed){\r\n            params.completed_at=new Date();\r\n        }\r\n        try {\r\n            const response = await axios.put(`todos/${this.props.id}`, params);\r\n            this.props.updateTodo(response.data.resource);\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    };\r\n\r\n    editTodo = () => {\r\n        this.props.editTodo(this.props.id);\r\n    };\r\n\r\n    onKeyUp = (e: { keyCode: number; }) => {\r\n        if (e.keyCode === 13 && this.state.editText !== '') {\r\n            this.updateTodo({description: this.state.editText});\r\n        }\r\n    };\r\n\r\n\r\n    public render() {\r\n        const Editing = (\r\n            <div className=\"editing\">\r\n                <input type=\"text\" value={this.state.editText}\r\n                       onChange={e => this.setState({editText: e.target.value})}\r\n                       onKeyUp={this.onKeyUp}\r\n                />\r\n                <div className=\"iconWrapper\">\r\n                    <EnterOutlined/>\r\n                    <DeleteOutlined onClick={() => this.updateTodo({deleted: true})}/>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        const Text = <span className=\"text\" onDoubleClick={this.editTodo}>{this.props.description}</span>;\r\n        const todoItemClass = classNames({\r\n            TodoItem: true,\r\n            editing: this.props.editing,\r\n            completed: this.props.completed\r\n        });\r\n\r\n        return (\r\n            <Wrapper className={todoItemClass}>\r\n                <Checkbox checked={this.props.completed}\r\n                          onChange={e=> this.updateTodo({completed: e.target.checked})}\r\n                />\r\n                {this.props.editing ? Editing : Text}\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: { todos: any; }, ownProps: any) => {\r\n    return {\r\n        ...ownProps\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = {editTodo, updateTodo};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\r\n\r\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport TodoInput from './TodoInput';\nimport styled from 'styled-components';\nimport TodoItem from './TodoItem';\nimport {Empty} from 'antd';\n\nconst Wrapper = styled.div`\n  padding: 16px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  width: calc(50% - 8px);\n  box-shadow: 0 2px 0 rgba(225, 225, 225, .2);\n  background: #fff;\n\n  > main {\n    margin-top: 16px;\n    height: 200px;\n    overflow-y: scroll;\n  }\n  >main::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\n\nclass Todos extends React.Component<any, any> {\n\n\n    get unDeletedTodos() {\n        return this.props.todos.filter((t: { deleted: any; }) => !t.deleted);\n    }\n\n    get unCompletedTodos() {\n        return this.unDeletedTodos.filter((t: { completed: any; }) => !t.completed);\n    }\n\n    // get completedTodos() {\n    //     return this.unDeletedTodos.filter((t: { completed: any; }) => t.completed);\n    // }\n\n    public render() {\n        const UncompleteList = () => {\n            if (this.unCompletedTodos.length === 0) {\n                return (<Empty/>);\n            } else {\n                return (this.unCompletedTodos.map((t: { id: any; }) => <TodoItem key={t.id} {...t}/>));\n            }\n        };\n        return (\n            <Wrapper className=\"Todos\">\n                <TodoInput/>\n                <main>\n                    <UncompleteList/>\n                </main>\n            </Wrapper>\n        );\n    }\n}\n\nconst mapStateToProps = (state: { todos: any; }, ownProps: any) => {\n    return {\n        todos: state.todos,\n        ...ownProps\n    };\n};\n\n\nexport default connect(mapStateToProps)(Todos);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  padding: 4px 0;\r\n  overflow: hidden;\r\n\r\n  > span {\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n\r\n  > .progress {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: #e9e9e9;\r\n    box-shadow: 1px 0 0 0 rgba(225, 225, 225, 1);\r\n    z-index: 0;\r\n  }\r\n`;\r\n\r\n\r\ninterface ICountDownProps {\r\n    timer: number;\r\n    onFinish: () => void;\r\n    duration: number;\r\n}\r\n\r\ninterface ICountDownState {\r\n    countDown: number;\r\n}\r\n\r\nlet timerId: NodeJS.Timeout;\r\n\r\nclass CountDown extends React.Component<ICountDownProps, ICountDownState> {\r\n    constructor(props: ICountDownProps) {\r\n        super(props);\r\n        this.state = {\r\n            countDown: this.props.timer\r\n        };\r\n    }\r\n\r\n    get countDown() {\r\n        const min = Math.floor(this.state.countDown / 1000 / 60);\r\n        const second = Math.floor(this.state.countDown / 1000 % 60);\r\n        return `${min < 10 ? `0${min}` : min}:${second < 10 ? `0${second}` : second}`;\r\n    }\r\n\r\n    componentDidMount() {\r\n        timerId = setInterval(() => {\r\n            const time = this.state.countDown;\r\n            this.setState({countDown: time - 1000});\r\n            document.title = `${this.countDown} - 番茄时间`;\r\n            if (time < 1000) {\r\n                document.title = '番茄时间';\r\n                this.props.onFinish();\r\n                clearInterval(timerId);\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(timerId);\r\n    }\r\n\r\n    public render() {\r\n        const percent = 1 - this.state.countDown / this.props.duration;\r\n        return (\r\n            <Wrapper>\r\n                <span>{this.countDown}</span>\r\n                <div className=\"progress\" style={{width: `${percent * 100}%`}}/>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountDown;","import React from 'react';\r\nimport {Button, Input,Modal} from 'antd';\r\nimport axios from '../../config/axios';\r\nimport {CloseCircleOutlined} from '@ant-design/icons';\r\nimport CountDown from './CountDown';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper=styled.div`\r\n  .countDownWrapper,.inputWrapper{\r\n    position: relative;\r\n  }\r\n  .start{\r\n    width: 100%;\r\n  }\r\n  .abort{\r\n    position: absolute;\r\n    right: -6px;top: -6px;\r\n    background: #fff;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\ninterface ITomatoActionProps {\r\n    startTomato: () => void;\r\n    unfinishedTomato: any;\r\n    updateTomato:(payload:any)=>void;\r\n}\r\n\r\ninterface ITomatoActionState {\r\n    description: string;\r\n}\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass TomatoAction extends React.Component<ITomatoActionProps, ITomatoActionState> {\r\n    constructor(props: ITomatoActionProps) {\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        };\r\n    }\r\n\r\n    onKeyUp = (e: { keyCode: number; }) => {\r\n        if (e.keyCode === 13 && this.state.description !== '') {\r\n            this.updateTomato({\r\n                description: this.state.description,\r\n                ended_at: new Date()\r\n            })\r\n            this.setState({description: ''})\r\n        }\r\n    };\r\n\r\n    abortTomato = ()=>{\r\n        this.updateTomato({aborted: true})\r\n        document.title = '番茄APP';\r\n    }\r\n\r\n    updateTomato = async (params:any)=>{\r\n        try {\r\n            const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`,params)\r\n            this.props.updateTomato(response.data.resource)\r\n        }catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n\r\n    onFinish = () => {\r\n        this.forceUpdate()\r\n    }\r\n\r\n    showConfirm = () =>{\r\n        confirm({\r\n            title: '您目前正在一个番茄工作时间中，要放弃这个番茄吗？',\r\n            onOk: ()=>{\r\n                this.abortTomato()\r\n            },\r\n            onCancel() {\r\n                console.log('取消');\r\n            },\r\n            cancelText: '取消',\r\n            okText: '确定',\r\n        });\r\n    }\r\n\r\n\r\n    public render() {\r\n        let html = <div/>;\r\n        if (this.props.unfinishedTomato === undefined) {\r\n            html = <Button className=\"start\" onClick={() => (this.props.startTomato())}>开始番茄</Button>;\r\n        } else {\r\n            const startedAt = Date.parse(this.props.unfinishedTomato.started_at);\r\n            const duration = this.props.unfinishedTomato.duration;\r\n            const timeNow = new Date().getTime();\r\n            if (timeNow - startedAt > duration) {\r\n                html = <div className=\"inputWrapper\">\r\n                    <Input placeholder=\"请输入你完成的任务\"\r\n                           value={this.state.description}\r\n                           onChange={(e) => this.setState({description: e.target.value})}\r\n                           onKeyUp={(e) => this.onKeyUp(e)}\r\n                    />\r\n                    <CloseCircleOutlined className=\"abort\" onClick={this.showConfirm}/>\r\n                </div>;\r\n            } else if (timeNow - startedAt < duration) {\r\n                const timer = duration - timeNow + startedAt\r\n                html = (\r\n                    <div className=\"countDownWrapper\">\r\n                        <CountDown timer={timer}\r\n                                   onFinish={this.onFinish}\r\n                                   duration={duration}\r\n                        />\r\n                        <CloseCircleOutlined className=\"abort\" onClick={this.showConfirm}/>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <Wrapper>\r\n                {html}\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TomatoAction;","import {ADD_TOMATO,INIT_TOMATOES,UPDATE_TOMATO,EDIT_TOMATO} from '../actionTypes';\r\nexport const addTomato = (payload:any)=>{\r\n    return{\r\n        type:ADD_TOMATO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const initTomatoes = (payload:any[])=>{\r\n    return {\r\n        type: INIT_TOMATOES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const updateTomato = (payload:any)=>{\r\n    return {\r\n        type: UPDATE_TOMATO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const editTomato = (payload:number)=>{\r\n    return{\r\n        type:EDIT_TOMATO,\r\n        payload\r\n    }\r\n}","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 16px;\r\n  border-top: 1px solid #ddd;\r\n\r\n  .dailyTomatoes {\r\n    padding-top: 16px;\r\n\r\n    .title {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 4px;\r\n\r\n      .dateTime {\r\n        color: #999;\r\n        font-size: 16px;\r\n      }\r\n\r\n      .finishedCount {\r\n        color: #666;\r\n        font-size: 12px;\r\n      }\r\n    }\r\n\r\n    .TomatoItem {\r\n      margin: 4px 0;\r\n      font-size: 14px;\r\n\r\n      .timeRange {\r\n        color: #999999;\r\n      }\r\n\r\n      .description {\r\n        color: #222222;\r\n        margin-left: 8px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ITomatoListProps {\r\n    finishedTomato: any;\r\n}\r\n\r\nconst TomatoItem = function (props: any) {\r\n    return (\r\n        <div className=\"TomatoItem\">\r\n            <span\r\n                className=\"timeRange\">{dayjs(props.started_at).format('HH:mm')} - {dayjs(props.ended_at).format('HH:mm')}</span>\r\n            <span className=\"description\">{props.description}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nclass TomatoList extends React.Component<ITomatoListProps, any> {\r\n\r\n\r\n    get dates() {\r\n        const dates = Object.keys(this.props.finishedTomato);\r\n        return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3);\r\n    }\r\n\r\n    public render() {\r\n        const list = this.dates.map(d => {\r\n            const tomatoes = this.props.finishedTomato[d];\r\n            return (\r\n                <div key={d} className=\"dailyTomatoes\">\r\n                    <div className=\"title\">\r\n                        <span className=\"dateTime\">{d}</span>\r\n                        <span className=\"finishedCount\">完成了{tomatoes.length}个番茄时间</span>\r\n                    </div>\r\n                    <div>\r\n                        {tomatoes.map((t: { id: any; }) => <TomatoItem key={t.id} {...t}/>)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <Wrapper>\r\n                {list}\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TomatoList;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TomatoAction from './TomatoAction';\r\nimport {connect} from 'react-redux';\r\nimport {addTomato, updateTomato} from '../../redux/actions/tomatoes-actions';\r\nimport axios from '../../config/axios';\r\nimport TomatoList from './TomatoList';\r\nimport _ from 'lodash';\r\nimport dayjs from 'dayjs';\r\nimport {Empty} from 'antd';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 16px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  width: calc(50% - 8px);\r\n  box-shadow: 0 2px 0 rgba(225, 225, 225, .2);\r\n  background: #fff;\r\n  height: 282px;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Space= styled.div`\r\n height: 20px;\r\n`\r\n\r\ninterface ITomatoesProps {\r\n    addTomato: (payload: any) => any;\r\n    updateTomato: (payload: any) => any;\r\n    tomatoes: any[];\r\n}\r\n\r\n\r\nclass Tomatoes extends React.Component<ITomatoesProps, any> {\r\n\r\n    get unfinishedTomato() {\r\n        return this.props.tomatoes.filter(t => !t.description && !t.ended_at && !t.aborted)[0];\r\n    }\r\n\r\n    get finishedTomato() {\r\n        const finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n        return _.groupBy(finishedTomatoes, (tomato) => {\r\n            return dayjs(tomato.started_at).format('YYYY-MM-DD');\r\n        });\r\n    }\r\n\r\n    startTomato = async () => {\r\n        try {\r\n            const response = await axios.post('tomatoes', {duration: 25 * 60 * 1000});\r\n            this.props.addTomato(response.data.resource);\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    };\r\n\r\n    public render() {\r\n\r\n\r\n        return (\r\n            <Wrapper>\r\n                <TomatoAction startTomato={this.startTomato}\r\n                              unfinishedTomato={this.unfinishedTomato}\r\n                              updateTomato={this.props.updateTomato}\r\n                />\r\n                {\r\n                    this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted).length!==0 ?\r\n                        <TomatoList finishedTomato={this.finishedTomato}/> : <div><Space/><Empty/></div>\r\n                }\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: { tomatoes: any; }, ownProps: any) => {\r\n    return {\r\n        tomatoes: state.tomatoes,\r\n        ...ownProps\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = {addTomato, updateTomato};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {updateTodo} from '../../../redux/actions/todos-actions';\r\nimport axios from '../../../config/axios';\r\nimport dayjs from 'dayjs';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .text {\r\n    .time {\r\n      color: #999;\r\n      margin-right: 8px;\r\n    }\r\n\r\n    .description {\r\n      color: #222222;\r\n    }\r\n  }\r\n\r\n  .action {\r\n    display: none;\r\n\r\n    span {\r\n      color: deepskyblue;\r\n      cursor: pointer;\r\n\r\n      &:first-child {\r\n        margin-right: 4px;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  &:hover {\r\n    background: #f4f4f4;\r\n\r\n    > .action {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ITodoHistoryTodoItemProps {\r\n    todo: any;\r\n    itemType: string;\r\n    updateTodo: (payload: any) => void;\r\n}\r\n\r\nclass TodoHistoryTodoItem extends React.Component<ITodoHistoryTodoItemProps, any> {\r\n\r\n    updateTodo = async (params: any) => {\r\n        try {\r\n            const response = await axios.put(`todos/${this.props.todo.id}`, params);\r\n            this.props.updateTodo(response.data.resource);\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    };\r\n\r\n    public render() {\r\n        let action;\r\n        let formatText;\r\n        let time;\r\n        if (this.props.itemType === 'finished') {\r\n            formatText = 'HH:mm';\r\n            time = this.props.todo.updated_at;\r\n            action = (\r\n                <div className=\"action\">\r\n                    <span onClick={() => this.updateTodo({completed: false})}>恢复</span>\r\n                    <span onClick={() => this.updateTodo({deleted: true})}>删除</span>\r\n                </div>\r\n            );\r\n        } else if (this.props.itemType === 'deleted') {\r\n            formatText = 'YYYY-MM-DD';\r\n            time = this.props.todo.created_at;\r\n            action = (\r\n                <div className=\"action\">\r\n                    <span onClick={() => this.updateTodo({deleted: false})}>恢复</span>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <Wrapper className=\"TodoHistoryTodoItem\" id=\"TodoHistoryTodoItem\">\r\n                <div className=\"text\">\r\n                    <span className=\"time\">{dayjs(time).format(formatText)}</span>\r\n                    <span className=\"description\">{this.props.todo.description}</span>\r\n                </div>\r\n                {action}\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n    ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryTodoItem);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport _ from 'lodash';\r\nimport {Empty, Tabs} from 'antd';\r\nimport TodoHistoryTodoItem from './TodoHistoryTodoItem';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 100px;\r\n  max-height: 500px;\r\n  overflow-y: scroll;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  .dailyTodos {\r\n    padding: 16px;\r\n    border: 1px solid #DDD;\r\n    border-radius: 4px;\r\n    margin-bottom: 8px;\r\n    display: flex;\r\n\r\n    .summary {\r\n      width: 100px;\r\n      margin-right: 8px;\r\n\r\n      .date {\r\n        span:first-child {\r\n          margin-right: 4px;\r\n          color: #222222;\r\n        }\r\n\r\n        span:last-child {\r\n          color: #888;\r\n          font-size: 12px;\r\n        }\r\n      }\r\n\r\n      .finishedCount {\r\n        font-size: 14px;\r\n        color: #888;\r\n      }\r\n    }\r\n\r\n    .todoList {\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\ninterface ITodoHistoryProps {\r\n    todos: any[];\r\n}\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nclass TodoHistory extends React.Component<ITodoHistoryProps, any> {\r\n\r\n    get finishedTodos() {\r\n        return this.props.todos.filter(t => t.completed && !t.deleted);\r\n    }\r\n\r\n    get deletedTodos() {\r\n        return this.props.todos.filter(t => t.deleted);\r\n    }\r\n\r\n    get dailyFinishedTodos() {\r\n        return _.groupBy(this.finishedTodos, (todo) => {\r\n            return dayjs(todo.updated_at).format('YYYY-MM-DD');\r\n        });\r\n    }\r\n\r\n    get finishedDates() {\r\n        return Object.keys(this.dailyFinishedTodos).sort((a, b) => Date.parse(b) - Date.parse(a));\r\n    }\r\n\r\n    public render() {\r\n        const finishedTodoList = this.finishedDates.map(date => {\r\n            return (\r\n                <div key={date} className=\"dailyTodos\">\r\n                    <div className=\"summary\">\r\n                        <p className=\"date\">\r\n                            <span>{date}</span>\r\n                        </p>\r\n                        <p className=\"finishedCount\">完成了{this.dailyFinishedTodos[date].length}个任务</p>\r\n                    </div>\r\n                    <div className=\"todoList\">\r\n                        {\r\n                            this.finishedTodos.length !== 0 ?\r\n                                this.dailyFinishedTodos[date].map(todo =>\r\n                                    <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"finished\"/>) : <Empty/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n        const deletedTodoList = this.deletedTodos.map(todo => {\r\n            return (\r\n                this.deletedTodos.length !== 0 ?\r\n                    <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"deleted\"/> : <Empty/>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab=\"已完成的任务\" key=\"1\">\r\n                        <Wrapper>\r\n                            {finishedTodoList}\r\n                        </Wrapper>\r\n                    </TabPane>\r\n                    <TabPane tab=\"已删除的任务\" key=\"2\">\r\n                        <Wrapper>\r\n                            {deletedTodoList}\r\n                        </Wrapper>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: { todos: any; }, ownProps: any) => {\r\n    return {\r\n        todos: state.todos,\r\n        ...ownProps\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TodoHistory);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport {updateTomato,editTomato} from '../../../redux/actions/tomatoes-actions';\r\nimport axios from '../../../config/axios';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  \r\n  >div>.time{\r\n    color: #999;\r\n    margin-right: 8px;\r\n  }\r\n\r\n  .action {\r\n    display: none;\r\n\r\n    span {\r\n      color: deepskyblue;\r\n      cursor: pointer;\r\n\r\n      &:first-child {\r\n        margin-right: 4px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: #f4f4f4;\r\n\r\n    > .action {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  //&:first-child {\r\n  //  border-top: 1px solid #ddd;\r\n  //}\r\n\r\n  &.editing {\r\n    background: #fff3d2\r\n  }\r\n\r\n  > .editing, > .text {\r\n    padding: 0 8px;\r\n    flex: 1;\r\n  }\r\n\r\n  > .editing {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst InputWrapper= styled.input`\r\n  border: 1px black solid;\r\n  outline: none;\r\n  background: white;\r\n`\r\n\r\ninterface ITomatoListProps {\r\n    tomato: any;\r\n    updateTomato: (payload: any) => void;\r\n    editTomato: (id: number) => any;\r\n}\r\n\r\ninterface ITomatoListState {\r\n    editText: string;\r\n    editing: boolean;\r\n}\r\n\r\n\r\n\r\nclass TomatoHistoryItem extends React.Component<ITomatoListProps, ITomatoListState> {\r\n    constructor(props: ITomatoListProps) {\r\n        super(props);\r\n        this.state = {\r\n            editText: this.props.tomato.description,\r\n            editing:false\r\n        };\r\n    }\r\n    updateTomato = async (params: any) => {\r\n        try {\r\n            const response = await axios.put(`tomatoes/${this.props.tomato.id}`, params);\r\n            this.props.updateTomato(response.data.resource);\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    };\r\n\r\n    editTomato = () => {\r\n        // this.props.editTomato(this.props.tomato.id);\r\n        this.setState({editing:true})\r\n    };\r\n\r\n    onKeyUp = (e: { keyCode: number; }) => {\r\n        if (e.keyCode === 13 && this.state.editText !== '') {\r\n            this.updateTomato({description: this.state.editText});\r\n            this.setState({editing:false})\r\n        }\r\n    };\r\n\r\n    onTomato=()=>{\r\n            this.updateTomato({description: this.state.editText});\r\n            this.setState({editing:false})\r\n    }\r\n\r\n\r\n    public render() {\r\n        let time1;\r\n        let time2;\r\n        time1 = this.props.tomato.created_at;\r\n        time2= this.props.tomato.ended_at;\r\n        let action;\r\n        if(this.state.editing){\r\n            action=(\r\n                <div className=\"action\">\r\n                    <span onClick={this.onTomato}>提交</span>\r\n                    <span onClick={() => this.setState({editing:false})}>取消</span>\r\n                </div>\r\n            )\r\n        }else {\r\n            action=(\r\n                <div className=\"action\">\r\n                    <span onClick={()=>this.setState({editing:true})}>编辑</span>\r\n                    <span onClick={() => this.updateTomato({aborted: true})}>删除</span>\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n\r\n        const Editing = (\r\n                <InputWrapper type=\"text\" value={this.state.editText}\r\n                       onChange={e => this.setState({editText: e.target.value})}\r\n                       onKeyUp={this.onKeyUp}\r\n                />\r\n        );\r\n        const Text = <span className=\"text\" onDoubleClick={this.editTomato}>{this.props.tomato.description}</span>;\r\n        const tomatoItemClass = classNames({\r\n            TomatoItem: true,\r\n            editing: this.state.editing,\r\n        });\r\n\r\n        return (\r\n            <Wrapper className={tomatoItemClass}>\r\n                <div>\r\n                    <span className=\"time\">{dayjs(time1).format('HH:mm')}-{dayjs(time2).format('HH:mm')}</span>\r\n                    <span>{this.state.editing ? Editing : Text}</span>\r\n                </div>\r\n                {action}\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: { tomatoes: any; }, ownProps: any) => ({\r\n    tomatoes: state.tomatoes,\r\n    ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n    updateTomato,editTomato\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TomatoHistoryItem);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nimport dayjs from 'dayjs';\r\nimport TomatoHistoryItem from './TomatoHistoryItem';\r\nimport styled from 'styled-components';\r\nimport {Empty} from 'antd';\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 100px;\r\n  max-height: 500px;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  .dailyTodos {\r\n    padding: 16px;\r\n    border: 1px solid #DDD;\r\n    border-radius: 4px;\r\n    margin-bottom: 8px;\r\n    display: flex;\r\n\r\n    .summary {\r\n      width: 100px;\r\n      margin-right: 8px;\r\n\r\n      .date {\r\n        span:first-child {\r\n          margin-right: 4px;\r\n          color: #222222;\r\n        }\r\n\r\n        span:last-child {\r\n          color: #888;\r\n          font-size: 12px;\r\n        }\r\n      }\r\n\r\n      .finishedCount {\r\n        font-size: 14px;\r\n        color: #888;\r\n      }\r\n    }\r\n\r\n    .todoList {\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ITomatoHistoryProps {\r\n    tomatoes: any[];\r\n}\r\n\r\n\r\nclass TomatoHistory extends React.Component<ITomatoHistoryProps, any> {\r\n\r\n    // get finishedTomato() {\r\n    //     const finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n    //     return _.groupBy(finishedTomatoes, (tomato) => {\r\n    //         return dayjs(tomato.started_at).format('YYYY-MM-DD');\r\n    //     });\r\n    // }\r\n\r\n    get finishedTomato() {\r\n        return this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n    }\r\n\r\n    get dailyFinishedTomato() {\r\n        return _.groupBy(this.finishedTomato, (tomatoes) => {\r\n            return dayjs(tomatoes.ended_at).format('YYYY-MM-DD');\r\n        });\r\n    }\r\n\r\n    get finishedDates() {\r\n        return Object.keys(this.dailyFinishedTomato).sort((a, b) => Date.parse(b) - Date.parse(a));\r\n    }\r\n\r\n\r\n    public render() {\r\n        // console.log(this.dailyFinishedTomato)\r\n        const finishedTomatoList = this.finishedDates.map(date => {\r\n            return (\r\n                <div key={date} className=\"dailyTodos\">\r\n                    <div className=\"summary\">\r\n                        <p className=\"date\">\r\n                            <span>{date}</span>\r\n                        </p>\r\n                        <p className=\"finishedCount\">完成了{this.dailyFinishedTomato[date].length}个番茄</p>\r\n                    </div>\r\n                    <div className=\"todoList\">\r\n                        {\r\n                            this.dailyFinishedTomato[date].map(tomato =>\r\n                                <TomatoHistoryItem key={tomato.id} tomato={tomato}/>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <Wrapper>\r\n                {\r\n                    this.finishedTomato.length!==0 ? finishedTomatoList : <Empty/>\r\n                }\r\n            </Wrapper>\r\n            // <>\r\n            //     {finishedTomatoList}\r\n            // </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: { tomatoes: any; }, ownProps: any) => {\r\n    return {\r\n        tomatoes: state.tomatoes,\r\n        ...ownProps\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TomatoHistory);","import React, { useEffect, useRef} from 'react';\r\nimport * as echarts from 'echarts';\r\n\r\ntype Props={\r\n    option:any;\r\n}\r\n\r\n\r\nconst TodoCharts:React.FC<Props> = (props) => {\r\n    const option = props.option;\r\n    const container = useRef(null);\r\n    const chart = useRef(null);\r\n    useEffect(() => {\r\n        // console.log(container.current);\r\n        // @ts-ignore\r\n        container.current.style.width = `860px`;\r\n        // @ts-ignore\r\n        container.current.style.height = `300px`;\r\n        // @ts-ignore\r\n        chart.current = echarts.init(container.current,'white')\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        // @ts-ignore\r\n        chart.current.setOption(option)\r\n    },[option])\r\n\r\n    return (\r\n        <div ref={container}/>\r\n    );\r\n};\r\n\r\nexport default TodoCharts;","import React, {useState} from 'react';\r\nimport dayjs from 'dayjs';\r\nimport TodoCharts from './TodoCharts';\r\nimport {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { Tabs } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Wrapper=styled.div`\r\n  margin-bottom: 20px;\r\n >span{\r\n   margin-left: 20px;\r\n   margin-right: 5px;\r\n }\r\n`\r\n\r\n\r\nconst { TabPane } = Tabs;\r\ntype Props={\r\n    todos: any[];\r\n    tomatoes:any[];\r\n}\r\n\r\nconst Charts:React.FC<Props> = (props) => {\r\n    const todos = props.todos;\r\n    const tomatoes = props.tomatoes;\r\n    const finishedTomato =()=>{\r\n        return tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n    }\r\n    const dailyFinishedTomato=()=>{\r\n        return _.groupBy(finishedTomato(), (tomatoes) => {\r\n            return dayjs(tomatoes.ended_at).format('YYYY-MM-DD');\r\n        });\r\n    }\r\n\r\n    const finishedTodos=()=>{\r\n        return todos.filter(t => t.completed && !t.deleted);\r\n    }\r\n    const dailyTodos = ()=>{\r\n        return _.groupBy(finishedTodos(), (todo) => {\r\n            return dayjs(todo.updated_at).format('YYYY-MM-DD');\r\n        });\r\n    }\r\n\r\n    const today = dayjs().format('YYYY-MM');\r\n    const [date, setDate] = useState(today);\r\n    const onDateChange = (e: { target: { value: React.SetStateAction<string>; }; }) => {\r\n        setDate(e.target.value);\r\n    };\r\n    const day = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28'];\r\n    let days;\r\n    if (dayjs(date).daysInMonth()===28){\r\n        days = day;\r\n    }else if (dayjs(date).daysInMonth()===29){\r\n        days = [...day,'29'];\r\n    }else if (dayjs(date).daysInMonth()===30){\r\n        days = [...day,'29','30'];\r\n    }else if (dayjs(date).daysInMonth()===31){\r\n        days=[...day,'29','30','31']\r\n    }\r\n\r\n    let ydata=[];\r\n    for (let i = 1; i <= dayjs(date).daysInMonth(); i++) {\r\n        let x:string;\r\n        if (i < 10) {\r\n            x = `${date}-0${i}`;\r\n        } else {\r\n            x = `${date}-${i}`;\r\n        }\r\n        if (dailyTodos()[x]===undefined){\r\n            ydata.push(0);\r\n        }else {\r\n            ydata.push(dailyTodos()[x].length)\r\n        }\r\n    }\r\n\r\n    let ydata1=[];\r\n    for (let i = 1; i <= dayjs(date).daysInMonth(); i++) {\r\n        let x:string;\r\n        if (i < 10) {\r\n            x = `${date}-0${i}`;\r\n        } else {\r\n            x = `${date}-${i}`;\r\n        }\r\n        if (dailyFinishedTomato()[x]===undefined){\r\n            ydata1.push(0);\r\n        }else {\r\n            ydata1.push(dailyFinishedTomato()[x].length)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    let option1 = {\r\n        title:{\r\n            show:true,\r\n            text:'本月Todo表',\r\n            left:375\r\n        },\r\n        xAxis: {\r\n            name:'天数',\r\n            type: 'category',\r\n            data: days\r\n        },\r\n        tooltip:{\r\n          show:true\r\n        },\r\n        yAxis: {\r\n            name:'Todo完成数',\r\n            type: 'value'\r\n        },\r\n        series: [{\r\n            data:  ydata,\r\n            type: 'line'\r\n        }]\r\n    }\r\n\r\n    let option2 = {\r\n        title:{\r\n            show:true,\r\n            text:'本月番茄表',\r\n            left:375\r\n        },\r\n        xAxis: {\r\n            name:'天数',\r\n            type: 'category',\r\n            data: days\r\n        },\r\n        tooltip:{\r\n            show:true\r\n        },\r\n        yAxis: {\r\n            name:'番茄完成数',\r\n            type: 'value'\r\n        },\r\n        series: [{\r\n            data:  ydata1,\r\n            type: 'line'\r\n        }]\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"Todo统计\" key=\"1\">\r\n                    <Wrapper>\r\n                        <span>当前月份</span>\r\n                        <input type=\"month\" value={date} onChange={onDateChange}/>\r\n                    </Wrapper>\r\n                    <TodoCharts option={option1}/>\r\n                </TabPane>\r\n                <TabPane tab=\"番茄统计\" key=\"2\">\r\n                    <Wrapper>\r\n                        <span>当前月份</span>\r\n                        <input type=\"month\" value={date} onChange={onDateChange}/>\r\n                    </Wrapper>\r\n                    <TodoCharts option={option2}/>\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: { todos: any; tomatoes:any }, ownProps: any) => {\r\n    return {\r\n        todos: state.todos,\r\n        tomatoes: state.tomatoes,\r\n        ...ownProps\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Charts);","export default __webpack_public_path__ + \"static/media/statistics.78e791fe.svg\";","export default __webpack_public_path__ + \"static/media/todo.ca8eb581.svg\";","export default __webpack_public_path__ + \"static/media/Tomato.a99edb81.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {connect} from 'react-redux';\r\n// import dayjs from 'dayjs';\r\n// import _ from 'lodash';\r\nimport TodoHistory from './TodoHistory/TodoHistory';\r\nimport TomatoHistory from './TomatoHistory/TomatoHistory';\r\nimport Charts from './Charts/Charts';\r\nimport statisticssvg from '../../icons/statistics.svg';\r\nimport todosvg from '../../icons/todo.svg'\r\nimport tomatosvg from '../../icons/Tomato.svg'\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  ul {\r\n    display: flex;\r\n\r\n    li {\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LiWrapper = styled.li`\r\n  border: 1px solid #e4e4e4;\r\n  display: flex;\r\n  min-height: 90px;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 0 hsl(0deg 0% 88% / 20%);\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  > img {\r\n    width: 60px;\r\n    height: 60px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst DivWrapper=styled.div`\r\n  >p{\r\n    margin: 0;\r\n  }\r\n  .res{\r\n    font-size: 12px;\r\n    line-height: 12px;\r\n    color: #999;\r\n  }\r\n`\r\ninterface IStatisticsProps {\r\n    todos: any[];\r\n    tomatoes: any[];\r\n}\r\n\r\ninterface IState {\r\n    activeId: number\r\n}\r\n\r\nclass Statistics extends React.Component<IStatisticsProps, IState> {\r\n    constructor(props: IStatisticsProps) {\r\n        super(props);\r\n        this.state = {\r\n            activeId: -1,\r\n        };\r\n    }\r\n\r\n    toggleActivePane(index: number) {\r\n        if (this.state.activeId !== index) {\r\n            this.setState({\r\n                activeId: index\r\n            });\r\n        }\r\n    }\r\n\r\n    get finishedTodos() {\r\n        return this.props.todos.filter(t => t.completed && !t.deleted);\r\n    }\r\n\r\n    // get dailyTodos() {\r\n    //     return _.groupBy(this.finishedTodos, (todo) => {\r\n    //         return dayjs(todo.updated_at).format('YYYY-MM-DD');\r\n    //     });\r\n    // }\r\n\r\n    get finishedTomatoes() {\r\n        return this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <Wrapper>\r\n                <ul>\r\n                    <LiWrapper className={this.state.activeId === 0 ? 'active' : ''}\r\n                               onClick={this.toggleActivePane.bind(this, 0)}>\r\n                        <img src={statisticssvg} alt=\"\"/>\r\n                        统计\r\n                    </LiWrapper>\r\n                    <LiWrapper className={this.state.activeId === 1 ? 'active' : ''}\r\n                               onClick={this.toggleActivePane.bind(this, 1)}>\r\n                        <img src={tomatosvg} alt=\"\"/>\r\n                        <DivWrapper>\r\n                            <p>番茄历史</p>\r\n                            <p className=\"res\">累计完成{this.finishedTomatoes.length}个番茄</p>\r\n                        </DivWrapper>\r\n                    </LiWrapper>\r\n                    <LiWrapper className={this.state.activeId === 2 ? 'active' : ''}\r\n                               onClick={this.toggleActivePane.bind(this, 2)}>\r\n                        <img src={todosvg} alt=\"\"/>\r\n                        <DivWrapper>\r\n                            <p>Todo历史</p>\r\n                            <p className=\"res\">累计完成{this.finishedTodos.length}个Todo</p>\r\n                        </DivWrapper>\r\n\r\n                    </LiWrapper>\r\n                </ul>\r\n                {this.state.activeId === 0 ? <Charts/> : null}\r\n                {this.state.activeId === 1 ? <TomatoHistory/> : null}\r\n                {this.state.activeId === 2 ? <TodoHistory/> : null}\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: { todos: any; tomatoes: any }, ownProps: any) => {\r\n    return {\r\n        todos: state.todos,\r\n        tomatoes: state.tomatoes,\r\n        ...ownProps\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Statistics);","export default __webpack_public_path__ + \"static/media/tomatoes.8fd027d3.svg\";","import React from 'react';\r\nimport axios from '../config/axios';\r\nimport styled from 'styled-components';\r\nimport Drop from '../components/Drop';\r\nimport Todos from '../components/TODO/Todos';\r\nimport Tomatoes from '../components/Tomatoes/Tomatoes';\r\nimport Statistics from '../components/Statistics/Statistics';\r\nimport {connect} from 'react-redux';\r\nimport {initTodos} from '../redux/actions/todos-actions';\r\nimport {initTomatoes} from '../redux/actions/tomatoes-actions';\r\nimport logo from '../icons/tomatoes.svg'\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  padding: 0 16px;\r\n\r\n  > header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border-bottom: 1px solid #ddd;\r\n    padding: 16px 0;\r\n  }\r\n\r\n  > main {\r\n    padding: 16px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  height: 35px;\r\n`\r\n\r\ninterface IIndexState {\r\n    user: any\r\n}\r\n\r\nclass HomePage extends React.Component<any, IIndexState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            user: {}\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getMe();\r\n        await this.getTodos();\r\n        await this.getTomatoes();\r\n    }\r\n\r\n    getMe = async () => {\r\n        const response = await axios.get('me');\r\n        this.setState({user: response.data});\r\n    };\r\n\r\n    getTodos = async () => {\r\n        try {\r\n            const response = await axios.get('todos');\r\n            const todos = response.data.resources.map((t: any) => Object.assign({}, t, {editing: false}));\r\n            this.props.initTodos(todos);\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    };\r\n\r\n    getTomatoes = async () => {\r\n        try {\r\n            const response = await axios.get('tomatoes');\r\n            this.props.initTomatoes(response.data.resources);\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    };\r\n\r\n    // logout = () => {\r\n    //     localStorage.setItem('x-token', '');\r\n    //     this.props.history.push('/Pomodoro/login');\r\n    // };\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper className=\"HomePage\">\r\n                <header>\r\n                    <Img src={logo} alt=\"\"/>\r\n                    <Drop name={this.state.user && this.state.user.account}/>\r\n                </header>\r\n                <main>\r\n                    <Tomatoes/>\r\n                    <Todos/>\r\n                </main>\r\n                <Statistics/>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n    ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    initTodos,\r\n    initTomatoes\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React from 'react';\nimport {\n    Router,\n    // Switch,\n    Route,\n} from 'react-router-dom';\nimport {Login} from './views/Login';\nimport {SignUp} from './views/SignUp';\nimport HomePage from './views/HomePage';\nimport TodoHistory from './components/Statistics/TodoHistory/TodoHistory';\nimport TomatoHistory from './components/Statistics/TomatoHistory/TomatoHistory';\nimport Charts from './components/Statistics/Charts/Charts';\nimport history from './config/history'\n\n\nfunction App() {\n    return (\n            <Router history={history}>\n                <div>\n                        <Route exact={true} path=\"/login\" component={Login}/>\n\n                        <Route exact={true} path=\"/signup\" component={SignUp}/>\n\n                        <Route exact={true} path=\"/\" component={HomePage}/>\n\n                        <Route exact={true} path=\"/todoHistory\" component={TodoHistory}/>\n\n                        <Route exact={true} path=\"/tomatoHistory\" component={TomatoHistory}/>\n\n                        <Route exact={true} path=\"/charts\" component={Charts}/>\n                </div>\n            </Router>\n    );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from 'redux';\r\nimport todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\nexport default combineReducers({todos,tomatoes});","import {ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO} from '../actionTypes';\r\n// eslint-disable-next-line\r\nexport default (state:any[] = [], action:any):any => {\r\n    switch (action.type){\r\n        case ADD_TODO:\r\n            return [action.payload,...state];\r\n        case INIT_TODOS:\r\n            return [...action.payload];\r\n        case UPDATE_TODO:\r\n            return state.map(t=>{\r\n                if(t.id === action.payload.id){\r\n                    return action.payload\r\n                }else{\r\n                    return t\r\n                }\r\n            })\r\n        case EDIT_TODO:\r\n            return state.map(t=>{\r\n                if(t.id === action.payload){\r\n                    return Object.assign({},t,{editing: true})\r\n                }else{\r\n                    return Object.assign({},t,{editing: false})\r\n                }\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO,EDIT_TOMATO} from '../actionTypes';\r\n// eslint-disable-next-line\r\nexport default (state: any[] = [], action: any) => {\r\n    switch (action.type) {\r\n        case ADD_TOMATO:\r\n            return [action.payload, ...state];\r\n        case INIT_TOMATOES:\r\n            return [...action.payload];\r\n        case UPDATE_TOMATO:\r\n            return state.map(t => {\r\n                if (t.id === action.payload.id) {\r\n                    return action.payload;\r\n                } else {\r\n                    return t;\r\n                }\r\n            });\r\n        case EDIT_TOMATO:\r\n            return state.map(t=>{\r\n                if(t.id === action.payload){\r\n                    return Object.assign({},t,{editing: true})\r\n                }else{\r\n                    return Object.assign({},t,{editing: false})\r\n                }\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}